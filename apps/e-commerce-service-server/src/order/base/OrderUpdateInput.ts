/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  ValidateNested,
  IsNumber,
  Min,
  Max,
} from "class-validator";
import { Type } from "class-transformer";
import { OrderStatusUpdateManyWithoutOrdersInput } from "./OrderStatusUpdateManyWithoutOrdersInput";
import { PaymentUpdateManyWithoutOrdersInput } from "./PaymentUpdateManyWithoutOrdersInput";
import { ShippingUpdateManyWithoutOrdersInput } from "./ShippingUpdateManyWithoutOrdersInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class OrderUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  orderDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => OrderStatusUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => OrderStatusUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => OrderStatusUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  orderStatuses?: OrderStatusUpdateManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    type: () => ShippingUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => ShippingUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => ShippingUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  shippings?: ShippingUpdateManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalAmount?: number | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { OrderUpdateInput as OrderUpdateInput };
