/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SiteSettings as PrismaSiteSettings } from "@prisma/client";

export class SiteSettingsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SiteSettingsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.siteSettings.count(args);
  }

  async siteSettingsItems(
    args: Prisma.SiteSettingsFindManyArgs
  ): Promise<PrismaSiteSettings[]> {
    return this.prisma.siteSettings.findMany(args);
  }
  async siteSettings(
    args: Prisma.SiteSettingsFindUniqueArgs
  ): Promise<PrismaSiteSettings | null> {
    return this.prisma.siteSettings.findUnique(args);
  }
  async createSiteSettings(
    args: Prisma.SiteSettingsCreateArgs
  ): Promise<PrismaSiteSettings> {
    return this.prisma.siteSettings.create(args);
  }
  async updateSiteSettings(
    args: Prisma.SiteSettingsUpdateArgs
  ): Promise<PrismaSiteSettings> {
    return this.prisma.siteSettings.update(args);
  }
  async deleteSiteSettings(
    args: Prisma.SiteSettingsDeleteArgs
  ): Promise<PrismaSiteSettings> {
    return this.prisma.siteSettings.delete(args);
  }
}
