/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Search as PrismaSearch } from "@prisma/client";

export class SearchServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SearchCountArgs, "select">): Promise<number> {
    return this.prisma.search.count(args);
  }

  async searches(args: Prisma.SearchFindManyArgs): Promise<PrismaSearch[]> {
    return this.prisma.search.findMany(args);
  }
  async search(
    args: Prisma.SearchFindUniqueArgs
  ): Promise<PrismaSearch | null> {
    return this.prisma.search.findUnique(args);
  }
  async createSearch(args: Prisma.SearchCreateArgs): Promise<PrismaSearch> {
    return this.prisma.search.create(args);
  }
  async updateSearch(args: Prisma.SearchUpdateArgs): Promise<PrismaSearch> {
    return this.prisma.search.update(args);
  }
  async deleteSearch(args: Prisma.SearchDeleteArgs): Promise<PrismaSearch> {
    return this.prisma.search.delete(args);
  }
}
