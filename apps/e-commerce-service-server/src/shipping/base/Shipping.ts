/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsDate,
  ValidateNested,
  IsOptional,
  IsString,
  IsNumber,
  Min,
  Max,
  IsEnum,
  MaxLength,
} from "class-validator";

import { Type } from "class-transformer";
import { Delivery } from "../../delivery/base/Delivery";
import { Order } from "../../order/base/Order";
import { EnumShippingShippingMethod } from "./EnumShippingShippingMethod";

@ObjectType()
class Shipping {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Delivery],
  })
  @ValidateNested()
  @Type(() => Delivery)
  @IsOptional()
  deliveries?: Array<Delivery>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => Order,
  })
  @ValidateNested()
  @Type(() => Order)
  @IsOptional()
  order?: Order | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  shippingCost!: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  shippingDate!: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumShippingShippingMethod,
  })
  @IsEnum(EnumShippingShippingMethod)
  @IsOptional()
  @Field(() => EnumShippingShippingMethod, {
    nullable: true,
  })
  shippingMethod?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  trackingNumber!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Shipping as Shipping };
